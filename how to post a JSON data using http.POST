package main

import (
	"fmt"
	"io"
	"net/http"
	"strings"
)

func Home(w http.ResponseWriter, r *http.Request) {
	fmt.Fprint(w, "This is Home")
}

func posthandler(w http.ResponseWriter, r *http.Request) {
	// Read the JSON data sent in the request body
	body, err := io.ReadAll(r.Body)
	if err != nil {
		http.Error(w, "Unable to read request body", http.StatusInternalServerError)
		return
	}

	fmt.Println("Received JSON data:", string(body)) // Print the received data to the terminal

	// Respond to the client
	fmt.Fprint(w, "i am a post handler function for route /post, you have successfully posted JSON data")
}

func main() {
	fmt.Println("Here we will see how to post JSON data")

	http.HandleFunc("/", Home)
	http.HandleFunc("/post", posthandler) // Get Post Request (JSON)

	// Run this in go routine (so that it did not block other piece of code)

	go func() {
		err := http.ListenAndServe(":8080", nil)
		if err != nil {
			panic(err)
		}
	}()

	performPostRequest() // perform post request

}

const postURL string = "http://localhost:8080/post"

func performPostRequest() {
	// need some data to post (JSON data)
	// note: use (`) not (')
	postData := strings.NewReader(` 
{
"Name" :"salman"
"Age" : "19"
"Game" :"FB"
}
`)

	// post this data
	postResponse, err := http.Post(postURL, "application/json", postData)
	// this data will go to postURL handler function (here posthandler)

	if err != nil {
		panic(err)
	}

	defer postResponse.Body.Close()

	content, err := io.ReadAll(postResponse.Body)
	if err != nil {
		panic(err)
	}

	fmt.Println("Actual data :", string(content))

}
